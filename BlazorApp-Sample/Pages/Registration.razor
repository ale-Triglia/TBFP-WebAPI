@page "/a"
@layout LoginLayout
@inject NavigationManager Navigation
@inject HttpClient Http

<div class="col-md-6 offset-md-3 mt-5">
    <div class="card">
        <h4 class="card-header">Registrazione</h4>
        <div class="card-body">
            <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="model.UserName" class="form-control" />
                    <ValidationMessage For="@(() => model.UserName)" />
                </div>
                <div class="form-group">
                    <label>Display name</label>
                    <InputText @bind-Value="model.DisplayName" class="form-control" />
                    <ValidationMessage For="@(() => model.DisplayName)" />
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="model.Email" type="email" class="form-control" />
                    <ValidationMessage For="@(() => model.Email)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="model.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                  <div class="form-group">
                    <label>NTel</label>
                    <InputText @bind-Value="model.NTel" type="phone" class="form-control" />
                    <ValidationMessage For="@(() => model.NTel)" />
                </div>
               <!--   <div class="form-group">
                    <label>TipoDoc</label>
                    <InputText @bind-Value="model.TipoDoc"    class="form-control" />
                    <ValidationMessage For="@(() => model.TipoDoc)" /> 
                </div> -->
                 
                  <div class="form-group">
                    <label>Numero Documento Identificativo</label>
                    <InputText @bind-Value="model.Ndi"  class="form-control" />
                    <ValidationMessage For="@(() => model.Ndi)" />
                </div>
                  <div class="form-group">
                    <label>Codice Fiscale</label>
                    <InputText @bind-Value="model.Cf"   class="form-control" />
                    <ValidationMessage For="@(() => model.Cf)" />
                </div>
                 <div class="form-group">
                    <label>DataN</label>
                    <InputDate @bind-Value="DataN"  class="form-control" />
                    <ValidationMessage For="@(() => DataN)" />
                </div>
                <button class="btn btn-primary">
                    @if (loading) {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Add
                </button>
                @if (!string.IsNullOrEmpty(error)) {
                    <div class="alert alert-danger mt-3 mb-0">@error</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code {

    private UserInfo model = new UserInfo();
    private bool loading;
    private string error;

    private DateTime DataN;

    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
            model.DataN = (DataN.Year * 10000) + (DataN.Month * 100) + (DataN.Day);
            Client c = new Client(string.Empty, Http);
            await c.AddAsync(model);
            Navigation.NavigateTo("login");
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }
}