@page "/AR"
 
@inject NavigationManager Navigation
@inject HttpClient Http

<div class="col-md-6 offset-md-3 mt-5">
    <div class="card">
        <h4 class="card-header">Inserisci Recensione</h4>
        <div class="card-body">
            <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
               
                <div class="form-group">
                    <label>Testo</label>
                    <InputText @bind-Value="model.Testo" class="form-control" />
                    <ValidationMessage For="@(() => model.Testo)" />
                </div>
      
                   <div class="form-group">
                     
                    <p>Seleziona numero stelle</p>
                       
                    <InputRadioGroup Name="Stella" @bind-Value="model.Stelle" class="form-control">

                         @for(int n1 = 1 ; n1<=5; n1++) { 
                             <InputRadio Name="Stella" Value="@(n1)" />  

                            @for (int n = 0; n < n1; n++ )
                             {
                             <span class="oi oi-star"></span> 
                         
                            }
                            <br>
                         }
                        
                          
                    </InputRadioGroup>
              </div> 
              <!--   <div class="form-group">
                    <label>Data</label>
                    <InputDate @bind-Value="model.DataRec"  class="form-control" />
                    <ValidationMessage For="@(() => model.DataRec)" />
                </div>-->
                <button class="btn btn-primary">
                    @if (loading) {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Add
                </button>
                @if (!string.IsNullOrEmpty(error)) {
                    <div class="alert alert-danger mt-3 mb-0">@error</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code {

    private Recensione model = new Recensione();
    private bool loading;
    private string error;

    private DateTime Data;

    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
           
            Client c = new Client(string.Empty, Http);
            await c.AddRecAsync(model);
            Navigation.NavigateTo("recensioni");
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }
}