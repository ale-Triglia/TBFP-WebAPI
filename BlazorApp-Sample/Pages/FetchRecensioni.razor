@page "/er"
@layout LoginLayout 
@inject HttpClient Http

<PageTitle>Elenco recensioni</PageTitle>

<h1>Elenco Recensioni</h1>

<p>Di seguito tutte le recensioni inserite</p>

@if (elenco == null)
{
    <p><em>Loading...</em></p>
}
else
{
                <div class="container">
                    <div class="row">
    
            @foreach (var i in elenco)
            {



                    
                        <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 ">

                            
                         
                                    <div class="col"> <h2> <font color= "white"> @i.UserName </font> </h2> </div>
                                    <div class="col">  <font color= "yellow"> @for(int n1 = 0 ; n1< i.Stelle; n1++) {<span class="oi oi-star"></span>} </font> </div>
                                    <div class="col">  <font color= "white">@i.Testo </font></div>
                                    <div class="col">  <font color= "white">@i.DataRec </font></div>
                                    <div class="col">   <br> <br> <br> </div>
                                   
                         </div>

            }
      
                     </div>
                </div>  
}

@code {
    private Recensione[]? elenco;

    protected override async Task OnInitializedAsync()
    {
        Client c = new Client(string.Empty, Http);
        elenco = (await c.RecensioniAsync()).OrderByDescending(x => x.DataRec).ToArray() ;
                

    }

}
